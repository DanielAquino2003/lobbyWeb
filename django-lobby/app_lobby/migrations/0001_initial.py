# Generated by Django 4.2.2 on 2024-05-09 10:54

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('TotalTareasPendientes', models.IntegerField(default=0)),
                ('TotalTareasEnProceso', models.IntegerField(default=0)),
                ('TotalTareasCompletadas', models.IntegerField(default=0)),
                ('puntos', models.IntegerField(default=0)),
                ('nivel', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(max_length=500)),
                ('fecha', models.DateField(max_length=8, null=True)),
                ('hora', models.TimeField(max_length=8, null=True)),
                ('puntosDeExperiencia', models.IntegerField(default=0)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('TODO', 'Todo'), ('DOING', 'Doing'), ('DONE', 'Done'), ('PAUSED', 'Paused')], default='TODO', max_length=6)),
                ('acompanantes', models.ManyToManyField(blank=True, related_name='acompa√±antes', to=settings.AUTH_USER_MODEL)),
                ('creador', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='creador', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Serie',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('repeticiones', models.IntegerField(default=0)),
                ('peso', models.DecimalField(decimal_places=2, max_digits=5)),
                ('creador', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='creadorSerie', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ejercicio',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('creador', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='creadorEjercicio', to=settings.AUTH_USER_MODEL)),
                ('series', models.ManyToManyField(blank=True, to='app_lobby.serie')),
            ],
        ),
        migrations.CreateModel(
            name='Asignatura',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('creditos', models.IntegerField(default=0)),
                ('creador', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='creadorAsignatura', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='TareasCompletadas',
            field=models.ManyToManyField(related_name='TareasCompletadas', to='app_lobby.task'),
        ),
        migrations.AddField(
            model_name='user',
            name='TareasEnProceso',
            field=models.ManyToManyField(related_name='TareasEnProceso', to='app_lobby.task'),
        ),
        migrations.AddField(
            model_name='user',
            name='TareasPendientes',
            field=models.ManyToManyField(related_name='TareasPendientes', to='app_lobby.task'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='TaskEstudio',
            fields=[
                ('task_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app_lobby.task')),
                ('tipo', models.CharField(choices=[('EXAMEN', 'Examen'), ('EJERCICIO', 'Ejercicio'), ('PRACTICA', 'Practica'), ('PRESENTACION', 'Presentacion'), ('OTRA', 'Otra')], default='OTRA', max_length=20)),
                ('asignatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_lobby.asignatura')),
            ],
            bases=('app_lobby.task',),
        ),
        migrations.CreateModel(
            name='TaskDeporte',
            fields=[
                ('task_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app_lobby.task')),
                ('deporte', models.CharField(max_length=100)),
                ('tiempo', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('ejercicios', models.ManyToManyField(blank=True, to='app_lobby.ejercicio')),
            ],
            bases=('app_lobby.task',),
        ),
    ]
